@using Humanizer

@model List<UserManagementApp.Models.User>

@{
    ViewData["Title"] = "User Management";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <hr />
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<h2 class="mb-4">User Management</h2>

<form id= "userActionForm" method="post">
    <div id="userToolbar" class="mb-3 d-none">
        <button type="submit" id="blockBtn" class="btn btn-outline-danger"
            data-action="/Account/BlockUsers"
            data-bs-toggle="tooltip" data-bs-placement="top" title="Block selected users">
            <i class="bi bi-slash-circle"></i>
        </button>
        <button type="submit" id="unblockBtn" class="btn btn-outline-secondary me-2"
            data-action="/Account/UnblockUsers"
            data-bs-toggle="tooltip" data-bs-placement="top" title="Unblock selected users">
            <i class="bi bi-unlock"></i>
        </button>
        <button type="submit" id="deleteBtn" class="btn btn-outline-danger"
            data-action="/Account/DeleteUsers"
            data-bs-toggle="tooltip" data-bs-placement="top" title="Delete selected users">
            <i class="bi bi-trash"></i>
        </button>
    </div>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        <input type="checkbox" id="selectAllCheckbox" class="form-check-input" /> <small>Select All</small>
                    </th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Status</th>
                    <th>Last Seen</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>
                            <input type="checkbox" name="userIds" value="@user.Id" class="user-checkbox" />
                        </td>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>@(user.IsBlocked ? "Blocked" : "Active")</td>
                        <td>
                            <span title="@user.LastLoginAt?.ToString("f")">
                                @((user.LastLoginAt.HasValue ? user.LastLoginAt.Value.ToLocalTime().Humanize() : "Never"))
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>

@section Scripts {
    <script>
        const selectAllCheckbox = document.getElementById("selectAllCheckbox");
        const userCheckboxes = document.querySelectorAll(".user-checkbox");
        const toolbar = document.getElementById("userToolbar");

        function updateToolbarVisibility() {
            const anyChecked = Array.from(userCheckboxes).some(cb => cb.checked);
            toolbar.classList.toggle("d-none", !anyChecked);
        }

        function updateSelectAllState() {
            const allChecked = Array.from(userCheckboxes).every(cb => cb.checked);
            selectAllCheckbox.checked = allChecked;
        }

        selectAllCheckbox.addEventListener("change", () => {
            userCheckboxes.forEach(cb => cb.checked = selectAllCheckbox.checked);
            updateToolbarVisibility();
        });

        userCheckboxes.forEach(cb => {
            cb.addEventListener("change", () => {
                updateToolbarVisibility();
                updateSelectAllState();
            });
        });

        updateToolbarVisibility();
    </script>

    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl =>
            new bootstrap.Tooltip(tooltipTriggerEl)
        );
    </script>

    <script>
    document.querySelectorAll('button[data-action]').forEach(button => {
        button.addEventListener('click', function () {
            const form = document.getElementById('userActionForm');
            form.action = this.getAttribute('data-action');
        });
    });
    </script>

}


